File    = table
Product = wirecell
Group:

Flavor = ANY
Qualifiers = "e10:prof"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e10-prof)

  Action = ExtraSetup
    setupRequired(root v6_06_08 -q +e10:+nu:+prof)
    setupRequired(boost v1_61_0 -q +e10:+prof)
    setupRequired(tbb v4_4_3a -q +e10:+prof)
    setupRequired(jsoncpp v1_7_2 -q +e10:+prof)
    setupRequired(eigen v3_2_9a)
    setupRequired( gcc v4_9_3a )

Flavor = ANY
Qualifiers = "e10:debug"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e10-debug)

  Action = ExtraSetup
    setupRequired(root v6_06_08 -q +e10:+nu:+debug)
    setupRequired(boost v1_61_0 -q +e10:+debug)
    setupRequired(tbb v4_4_3a -q +e10:+debug)
    setupRequired(jsoncpp v1_7_2 -q +e10:+debug)
    setupRequired(eigen v3_2_9a)
    setupRequired( gcc v4_9_3a )

Common:
   Action=setup
      proddir()
      setupenv()
      ExeActionRequired(DefineFQ)
      envSet (WIRECELL_VERSION, ${UPS_PROD_VERSION} )
      # define the include directory
      envSet (WIRECELL_INC, ${WIRECELL_FQ_DIR}/include)
      # add the lib directory to LD_LIBRARY_PATH
      if    ( sh -c 'for dd in lib;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
          envSet( WIRECELL_LIB, ${WIRECELL_FQ_DIR}/lib )
      endif ( sh -c 'for dd in lib;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
      if    ( sh -c 'for dd in lib64;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
          envSet( WIRECELL_LIB, ${WIRECELL_FQ_DIR}/lib64 )
      endif ( sh -c 'for dd in lib64;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
      if ( test `uname` = "Darwin" )
	envPrepend(DYLD_LIBRARY_PATH, ${WIRECELL_LIB})
      else()
	envPrepend(LD_LIBRARY_PATH, ${WIRECELL_LIB})
      endif ( test `uname` = "Darwin" )
      # add the bin directory to the path
      pathPrepend(PATH, ${WIRECELL_FQ_DIR}/bin )
      # requirements
      exeActionRequired(ExtraSetup)

End:
